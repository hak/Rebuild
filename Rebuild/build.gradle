buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.+'
        classpath 'com.squareup.gradle:gradle-android-test-plugin:0.9.1-SNAPSHOT'
        classpath 'org.notlocalhost.gradle:gradle-calabash-android-plugin:0.1.+'
    }
}

apply plugin: 'android'
apply plugin: 'calabash-test'

repositories {
    mavenCentral()
    maven { url 'https://raw.github.com/rejasupotaro/AsyncRssClient/master/AsyncRssClient/repository' }
    maven { url 'https://raw.github.com/rejasupotaro/RobotGirl/master/RobotGirl/repository' }
}

def versionMajor = 0
def versionMinor = 3
def versionPatch = 0
def versionBuild = 0 // bump for dogfood builds, public betas, etc.

def gitSha() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.1"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 19
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName "${versionMajor}.${versionMinor}.${versionPatch}-${gitSha()}"
    }

    def releasable = new File('../secret.gradle').exists()
    if (releasable) {
        apply from: '../secret.gradle'
        signingConfigs {
            release {
                storeFile file('rebuild.keystore')
                storePassword project.storePassword
                keyAlias project.keyAlias
                keyPassword project.keyPassword
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            runProguard false
            versionNameSuffix '.debug'
        }

        if (releasable) {
            release {
                signingConfig signingConfigs.release
                debuggable false
                runProguard true
                proguardFile getDefaultProguardFile('proguard-android-optimize.txt')
                proguardFile file('./proguard-release.txt')
            }
        }
    }

    productFlavors {
        staging {}
        product {}
    }

    dependencies {
        compile fileTree(dir: 'src/main/libs', include: '*.jar')
        compile 'com.android.support:appcompat-v7:18.0.0'
        compile 'org.roboguice:roboguice:2.0'
        compile 'rejasupotaro:async-rss-client:0.0.5'
        compile 'com.squareup:otto:1.3.2'
        compile 'com.loopj.android:android-async-http:1.4.4'
        compile 'org.apache.commons:commons-lang3:3.1'
        compile 'com.squareup.picasso:picasso:2.0.0'
        compile 'org.twitter4j:twitter4j-core:3.0.5'

        instrumentTestCompile fileTree(dir: 'src/instrumentTest/libs', include: '*.jar')
        instrumentTestCompile 'com.squareup:fest-android:1.0.7'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
    }
}

makeGrayscaleLauncherIcon(file("src/main"), "ic_launcher.png")
